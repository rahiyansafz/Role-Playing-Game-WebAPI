// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPGWebAPI.Data;

#nullable disable

namespace RPGWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RPGWebAPI.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("Defeats")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Fights")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Victories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f2f59d9-44b5-4b84-9e64-c6f1ec295d0a"),
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            PublishedAt = new DateTime(2022, 4, 7, 13, 27, 54, 379, DateTimeKind.Local).AddTicks(4318),
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = new Guid("1bc19437-5989-4ac6-a07b-d058fbf45648"),
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            PublishedAt = new DateTime(2022, 4, 7, 13, 27, 54, 379, DateTimeKind.Local).AddTicks(4356),
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("RPGWebAPI.Models.CharacterSkill", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("a1b7697d-3a1a-45e3-8d8e-6447cb1a8b19"),
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = new Guid("5355c1a8-bb0c-49f1-bc2c-b8c8ce2539f9"),
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = new Guid("d2d33062-e77b-4b10-8b8c-44e20ef44b93"),
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("RPGWebAPI.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("RPGWebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 133, 235, 82, 41, 56, 128, 254, 145, 10, 141, 0, 95, 99, 15, 241, 73, 203, 109, 139, 165, 244, 101, 163, 201, 17, 214, 52, 160, 25, 230, 240, 206, 42, 160, 147, 31, 226, 245, 86, 19, 230, 45, 175, 19, 90, 5, 45, 217, 227, 99, 250, 49, 130, 18, 253, 153, 193, 124, 57, 149, 181, 216, 61, 230 },
                            PasswordSalt = new byte[] { 44, 192, 0, 104, 227, 134, 182, 101, 97, 14, 75, 163, 149, 139, 84, 170, 235, 76, 194, 9, 190, 186, 55, 15, 41, 93, 163, 102, 81, 151, 3, 57, 53, 189, 76, 189, 157, 64, 15, 150, 125, 216, 11, 74, 66, 243, 39, 116, 109, 66, 102, 61, 2, 46, 166, 108, 132, 217, 189, 0, 60, 190, 109, 148, 115, 115, 111, 172, 92, 87, 36, 27, 151, 161, 215, 46, 180, 65, 247, 54, 109, 48, 67, 94, 16, 232, 184, 99, 117, 138, 116, 172, 226, 236, 151, 255, 130, 117, 105, 144, 245, 215, 226, 175, 142, 135, 245, 7, 11, 181, 71, 18, 112, 58, 160, 68, 148, 192, 126, 6, 101, 222, 180, 174, 88, 205, 182, 90 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 133, 235, 82, 41, 56, 128, 254, 145, 10, 141, 0, 95, 99, 15, 241, 73, 203, 109, 139, 165, 244, 101, 163, 201, 17, 214, 52, 160, 25, 230, 240, 206, 42, 160, 147, 31, 226, 245, 86, 19, 230, 45, 175, 19, 90, 5, 45, 217, 227, 99, 250, 49, 130, 18, 253, 153, 193, 124, 57, 149, 181, 216, 61, 230 },
                            PasswordSalt = new byte[] { 44, 192, 0, 104, 227, 134, 182, 101, 97, 14, 75, 163, 149, 139, 84, 170, 235, 76, 194, 9, 190, 186, 55, 15, 41, 93, 163, 102, 81, 151, 3, 57, 53, 189, 76, 189, 157, 64, 15, 150, 125, 216, 11, 74, 66, 243, 39, 116, 109, 66, 102, 61, 2, 46, 166, 108, 132, 217, 189, 0, 60, 190, 109, 148, 115, 115, 111, 172, 92, 87, 36, 27, 151, 161, 215, 46, 180, 65, 247, 54, 109, 48, 67, 94, 16, 232, 184, 99, 117, 138, 116, 172, 226, 236, 151, 255, 130, 117, 105, 144, 245, 215, 226, 175, 142, 135, 245, 7, 11, 181, 71, 18, 112, 58, 160, 68, 148, 192, 126, 6, 101, 222, 180, 174, 88, 205, 182, 90 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("RPGWebAPI.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = new Guid("57a679bb-ec69-4a54-b19a-f245e3f2b48a"),
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = new Guid("ecd37a20-5620-41ec-afd6-cf09ec25d8cc"),
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("RPGWebAPI.Models.Character", b =>
                {
                    b.HasOne("RPGWebAPI.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RPGWebAPI.Models.CharacterSkill", b =>
                {
                    b.HasOne("RPGWebAPI.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGWebAPI.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("RPGWebAPI.Models.Weapon", b =>
                {
                    b.HasOne("RPGWebAPI.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("RPGWebAPI.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RPGWebAPI.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon")
                        .IsRequired();
                });

            modelBuilder.Entity("RPGWebAPI.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("RPGWebAPI.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
